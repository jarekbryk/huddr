# About this book

This online book supports students in the Division of Biomedical and Life Sciences at the University of Huddersfield as they learn R. Unlike step-by-step tutorials, it is designed as a quick reference: core functions, key parameters, and example syntax collected in one place. While most details also exist in R’s help pages, we have tailored the content to our curriculum and the common challenges that students face.

The book was co-designed and co-written with second-year students in 2024/25 and will continue to evolve each year based on student input. If you spot typos, errors, or unclear explanations—or have ideas to improve or extend the content—please [see how to contribute](how_to_contribute.qmd).

## How this book is organised

This book has five parts:

- **Part 1: Introduction** — (this page) describes our idea for the book, how it’s organised, and brief context on our approach to teaching R (see [tidyverse vs base R](tidyverse_vs_baser.qmd) and [LLMs in learning R](llms.qmd)). It also encourages you to contribute to the development of the book.
- **Part 2: Preparations** — deals with preparing your computer: installing R, adjusting the `RStudio` interface, getting required packages, and using `Posit Cloud` for those who can only use Chromebooks or iPads. It also contains an important practical chapter on how to use a computer for operations on files and folders in Windows and macOS.
- **Part 3: R fundamentals** — the key content that you will use the most: references on loading data, handling missing values, essential functions and their parameters, reshaping and joining data, visualisation with `ggplot2`, running basic statistical tests, and an introduction to functions and loops. It also contains a chapter with self-checking exercises that run entirely in the browser and are useful to make sure you are “getting it” as you go along.
- **Part 4: Content from classes** — contains curated code and notes from weekly sessions where R is introduced.
- **Part 5: Topic-specific content** — comprises several independent chapters that support other modules and assignments (e.g., quality control and limits of detection for the Professional Skills 2; genomics and phylogenetics for the Current Topics in Molecular and Life Sciences (in preparation)).

Once your tools are ready, our aim is to take you from zero to a first meaningful plot with a simple statistical summary in under 20 minutes.

## Learning resources for our classes

Throughout the book and the classes we almost exclusively use the `tidyverse` dialect of R. For the justification, see the page on [tidyverse vs base R](tidyverse_vs_baser.qmd). Our recommended textbooks to accompany the classes are:

- [*R for Data Science*](https://r4ds.hadley.nz) (second edition) by Hadley Wickham, Mine Çetinkaya-Rundel and Garrett Grolemund, for all kinds of practical information on data science and many explanations of the code that we will be learning. An essential reading and a practical source — all the code from the book can be executed, followed and modified in your `RStudio`.
- [*R Graphics Cookbook*](https://r-graphics.org) (second edition) by Winston Chang, dedicated entirely to using `ggplot2`, the package that we use to make all the plots and visualisations of data in the class. Contains recipe-like code snippets on how to make and modify almost every plot that we will be making in class.

Both are freely available online. In addition, there is a wealth of free, online resources, guides and tutorials on learning R - the strenght of online community is one of the great advantages of R over other languages. Feel free to use those resources in your practice, and if you find something particularly useful, [let us know](how_to_contribute.html)!

### What about large language models?

Ah, yes, we are glad you asked.

![](images/blueberry_chatgpt.png){fig-alt="Screenshot of a chatGPT incorrectly counting the letter 'b' in “blueberry” (shows “Total: 3”)"}

## How to learn R

R is difficult for beginners and there is no way to sugarcoat it. The learning curve is steep, but we do not think it is very long: once you master a handful of commands and syntax principles, your own curiosity will drive you to transform, analyse and visualise your own data. There is only one principle we must emphasise for all students: practice.

![](images/how_to_learn_r.png){fig-alt="Humorous “O RLY?”-style cover with a kitten and the title “Changing Stuff and Seeing What Happens” — encouraging experimentation"}

**It cannot be overstated how important is your own practice to learning R.** Run the examples as you read, then try to change them — alter a number, rename a variable, or add a new line — and see what happens. One of the great advantages of coding is that you can always check your workings — run the code in a different way, or on modified data, and see whether the output you get is the one you expect. 

Computers are stupid and they are very particular about the way their instructions have to be written, so the vast majority of the errors you will encounter initially will be typos and mispaired brackets and not errors in the actual intent of the code. The more often you experiment, the faster you will become comfortable with R, and the sooner you will be able to use it for your own explorations. 

…and try to enjoy the process :-) — R is extremely powerful, and there is rarely a limit in what can be done in it with your data. Let’s go!
