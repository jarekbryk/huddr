# Limit of Detection

The aim of this guide is to show you how to calculate the Limit of Detection (LOD) and the Limit of Quantitation (LOQ) using R. For a detailed explanation of these terms, please see [Armbruster and Pry, 2008](https://pmc.ncbi.nlm.nih.gov/articles/PMC2556583/#sec3).

First, install the packages and load the libraries

```{r}
# install.packages("chemCal")
library(chemCal)
library(tidyverse)
```

### Getting the data

The sample data below is from an ELISA standard curve. The absorbance was measured at 450 nm for seven known concentrations of albumin (ng per ml). Optionally, you can [read about this ELISA here](https://www.abcam.com/en-us/products/elisa-kits/human-albumin-elisa-kit-ab108788?). The manufacturer claims that this kit "Detects albumin levels from 3.125 ng/ml)". Lets see if our real student data below compares with this. Load in the data below.

```{r}
albumin_concentration <- c(0.0, 1.4, 2.8, 5.6, 11.1, 22.2, 44.4)
absorbance <- c(0.135, 0.215, 0.156, 0.240, 0.324, 0.557, 0.891)
df <- tibble(albumin_concentration = albumin_concentration, absorbance = absorbance)
```

Take a quick look at the data. 

```{r}
df |> ggplot(aes(x = albumin_concentration, y = absorbance)) +
  geom_point() +
  geom_line() +
  xlab("[Albumin] (ng/ml)") +
  ylab("Absorbance (450 nm)")
```

We need to fit a linear model to the data.

```{r}
#fit a linear model to the data
linear_model <- lm(absorbance ~ albumin_concentration, data = df)
linear_model
```

The chemCal package has a function for generating a plot of the calibration data with the 95% confidence limits.

```{r}
#generate a graph
calplot(linear_model, xlab = "[Albumin] (ng/ml)", ylab = "Absorbance (450 nm)")
```

### Calculating the Limit of Detection (LOD) (or minimum detectable value):

The LOD is the lowest amount of analyte (or signal) that can be reliably detected by a method. It is defined based on the probability of making a type II error — also known as a false negative. A type II error happens when the analyte is actually present, but the method fails to detect it. The probability of a false negative is given by 'beta' and has the default value of 0.05 (a 5% chance of a false negative).

```{r}
#with default values
lod(linear_model, 
    alpha = 0.05,
    beta = 0.05,
    method = "default",
    tol = "default")
```

Or simply...

```{r}
lod(linear_model)
```

The output gives a list of values, corresponding to the two axes. The LOD is normally stated in units of concentration (the x-axis). You can extract the albumin concentration from the list using the $ sign as below. 

```{r}
lod(linear_model)$albumin_concentration
```

The units of this value are the same as the x-axis. So...

```{r}
paste("Limit of Detection = ", 
      round(lod(linear_model)$albumin_concentration, 2), #rounds to 2 d.p.
      "ng/ml",
      sep = " ") # adds a space between each of the above
```

In the same way, you calculate the Limit of Quantitation using "loq"

```{r}
paste("Limit of Quantitation = ", 
      round(loq(linear_model)$albumin_concentration, 2), #rounds to 2 d.p.
      "ng/ml",
      sep = " ") # adds a space between each of the above
```

## References

- Armbruster, D. A., & Pry, T. (2008). Limit of blank, limit of detection and limit of quantitation. [The Clinical biochemist. Reviews, 29 (Suppl 1), S49–S52](https://pmc.ncbi.nlm.nih.gov/articles/PMC2556583/#sec3)
